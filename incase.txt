<?php
	include "./indexer.php";
		
	function summarize ($filename, $compress) {
		// proses indexing
		$inv_index  = indexer();
	
		// load file dan daftar stopwords
		$load_file  = file_get_contents("./corpus/".$filename);
		$sentence 	= preg_split("/[.]+/", $load_file);
		$sentence 	= array_slice($sentence, 0, sizeof($sentence)-1); // buang array terakhir (kosong)

		$stopwords	= file_get_contents("./stopwords.txt");
		$stopwords	= preg_split("/[\s]+/", $stopwords);

		// jumlah kalimat yang diringkas
		$compression_rate 	= $compress/100; 
		$max_sentence  		= floor(sizeof($sentence)*$compression_rate);

		// inisialisasi
		$sentence_weight = array();

		// menghitung bobot tf.idf tiap kalimat
		foreach ($sentence as $key => $value) {
			// tokenisasi dengan membuang stopwords
			$word = preg_split("/[\d\W\s]+/", strtolower($value));
			$word = array_diff($word, $stopwords);		
			$word = array_values($word); // perbaiki indeks
			
			// inisialisasi bobot dan hitung frekuensi token
			$tf_idf 	= 0;
			$freq_word 	= array_count_values($word);

			// hitung bobot tf.idf
			foreach ($freq_word as $token => $tf) 
				$tf_idf += $tf * $inv_index[$token]['idf'];

			// simpan nilai bobot kalimat
			array_push($sentence_weight, $tf_idf);
			
		}
		
		$jumlah_array = count($sentence_weight);
		if ( $jumlah_array <= 20) //menentukan jumlah centroid
		{$k = 4;}
		else
		{ $k = $jumlah_array-20;}
	
				function UniqueRandomNumbersWithinRange($min, $max, $quantity) {
				$numbers = range($min, $max);
				shuffle($numbers);
				return array_slice($numbers, 0, $quantity);
}
	
	
	$angka_rand = array();
	$angka_rand = UniqueRandomNumbersWithinRange(0,$jumlah_array,$k); //memasukan indeks-indeks untuk centroid
	
	
	$centroid = array();
	
    for($i=0;$i<$k;$i++) //centroid berdasarkan indeks weight
	{
		$centroid [$i] = $sentence_weight[$angka_rand[$i]]; 
	}
	
	
	$kelas_kalimat = array(); // kalimat ke -i, masuk ke kluster ke -c

	for ($x = 0; $x < $jumlah_array; $x++) { //iterasi pertama jarak objek ke kelas-kelas
    
	$jarak = array();
	
		for($j=0;$j<$k;$j++)
		{
			$jarak [$j] = sqrt(pow(($sentence_weight[$x]-$centroid[$j]),2));
			
		}
		$kelas_kalimat[0][$x]=array_search(min($jarak),$jarak); //indeks/cluster dari jarak terkecil dimasukan ke kalimat
		} 

	for($i = 0; $i < $k; $i++) //masukan nilai centroid baru setelah iterasi pertama
	{
		$centroid_baru = 0;
		$sementara = array();
		$sementara = array_keys($kelas_kalimat[0],$i);
		echo "centroid ke ".$i." = <br>";
		for($j = 0; $j < count($sementara) ;$j++)
		{   
			
			$centroid_baru = $centroid_baru + $sentence_weight[$sementara[$j]];
			echo " centroid baru ".$centroid_baru;   
		}
		$centroid [$i] = $centroid_baru/count($sementara);
		
	}

	    print_r($centroid);
		
	$flag = 0;
	while($flag=0)
	{
			for ($x = 0; $x < $jumlah_array; $x++) { //iterasi jarak objek ke kelas-kelas
    
	$jarak = array(); //sementara saja, untuk satu sentence
	
		for($j=0;$j<$k;$j++)
		{
			$jarak [$j] = sqrt(pow(($sentence_weight[$x]-$centroid[$j]),2));
			
		}
		$kelas_kalimat[$x]=array_search(min($jarak),$jarak); //indeks/cluster dari jarak terkecil dimasukan ke kalimat
		}  
	}
	
	
		// sorting bobot tertinggi -> potong array -> sorting urutan kalimat
		arsort($sentence_weight);
		
		
		$sorted = array_slice($sentence_weight, 0, $max_sentence, true);
		ksort($sorted);
		
	    //$sentence_weight = 0 => 1.234
		
		
		
		
		// gabungkan ringkasan
		$summary = "";
		foreach ($sorted as $key => $value)
		
			$summary = $summary.$sentence[$key].". ";

		// return teks asli dan hasil ringkasan
		$output = array();
		$output['original'] = $load_file;
		$output['summary']  = $summary;

		return $output;
	}